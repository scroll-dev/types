name: Unit Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
    branches:
      - main

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: git

jobs:
  skip_check:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: 'true'
          concurrent_skipping: 'same_content_newer'
          paths_ignore: '["**/README.md"]'

  test:
    if: |
      github.event.pull_request.draft == false &&
      (github.event.action == 'ready_for_review' || needs.skip_check.outputs.should_skip != 'true')
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64]
    container:
      image: ${{ matrix.arch }}/rust
      env:
        # Disable full debug symbol generation to speed up CI build and keep memory down
        # "1" means line tables only, which is useful for panic tracebacks.
        RUSTFLAGS: "-C debuginfo=1"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: git config --system --add safe.directory /__w/scroll-prover/scroll-prover
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-07-07
      - name: Cargo cache
        uses: Swatinem/rust-cache@v2
      - name: Setup golang
        uses: actions/setup-go@v3
        with:
          cache: false
          go-version: ~1.21
      # Go cache for building geth-utils
      - name: Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ matrix.arch }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.arch }}-go-
        # https://github.com/actions/cache/issues/810
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5
      - name: Run tests
        run: make test
